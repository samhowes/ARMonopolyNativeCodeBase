
Notes:
 - By adding the unity subview to ARMViewController in ARMAppController:createViewHierarchyImpl, I don't have to have Test/ARMViewcontroller classes, and can just have one production class.

Tasks:
 R Test Bluetooth
 R Copy files from bundle folder to documents at launch

 F Do the artwork for the App Icon and loading screens
 F Splash screen
 F Re-launch screen
 F Add user hints about finding a game tile

Tests for Bluetooth
 √ Properly initialize and handle user notification for turning on bluetooth.
 √ Properly scan and detect devices running the GameTile Configuration Service
    - Scanning and detecting a device works, but the iPad doesn't want to show my GTCS service as running.
 - Connect to peripheral
  - Do I stop scanning here? I think for my purposes, yes.
 - Disconnect from peripheral
   - Scan for tiles again
 - Scan peripheral for services
  - what if I cancel here?
 - Scan service for characteristics
  - what if i cancel here?
 - Read GTCS ImageTargetID
  - what if I cancel here?
 - Write GTCS User Display String
  - what if I cancel here?
 

Bugs:
 - Changing the orientation fails
 - Using the device camera to take a picture fails


DONE:
Implement Networking Completely
Integrate Networking/Create a networking implementation
Update UserData
Dynamically form The current players in the main screen
Separate the settings screen into three individual views
Integrate Bluetooth
Implement the user data model
Integrate data model changes into Unity

CommitNotes:
Stable version with all settings view controllers
 - Bluetooth controller doesn't crash, but doesn't work properly either
 	- Need to test with another BLE device
 - Moving to another task: Adding the current players to the home screen
not sure wtf just happened with git



